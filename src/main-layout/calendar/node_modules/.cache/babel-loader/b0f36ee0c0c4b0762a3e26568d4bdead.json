{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\source\\\\repos\\\\react-scheduler\\\\src\\\\components\\\\scheduler\\\\Scheduler.js\";\n\n/* eslint-disable */\n\n/*{ { src / components / Scheduler / Scheduler.js } }*/\nimport React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\nimport './Scheduler.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scheduler = window.scheduler;\nexport default class Scheduler extends Component {\n  initSchedulerEvents() {\n    if (scheduler._$initialized) {\n      return;\n    }\n\n    const onDataUpdated = this.props.onDataUpdated;\n    scheduler.attachEvent('onEventAdded', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('create', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventChanged', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('update', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventDeleted', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('delete', ev, id);\n      }\n    });\n    scheduler._$initialized = true;\n  }\n\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = ['day', 'week', 'month', 'date', 'prev', 'today', 'next'];\n    const {\n      events\n    } = this.props;\n    scheduler.init(this.schedulerContainer, new Date(2021, 5, 14));\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.schedulerContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/admin/source/repos/react-scheduler/src/components/scheduler/Scheduler.js"],"names":["React","Component","scheduler","window","Scheduler","initSchedulerEvents","_$initialized","onDataUpdated","props","attachEvent","id","ev","componentDidMount","skin","config","header","events","init","schedulerContainer","Date","clearAll","parse","render","input","width","height"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAO,wDAAP;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACD,SAAzB;AAEA,eAAe,MAAME,SAAN,SAAwBH,SAAxB,CAAkC;AAE7CI,EAAAA,mBAAmB,GAAG;AAClB,QAAIH,SAAS,CAACI,aAAd,EAA6B;AACzB;AACH;;AAED,UAAMC,aAAa,GAAG,KAAKC,KAAL,CAAWD,aAAjC;AAEAL,IAAAA,SAAS,CAACO,WAAV,CAAsB,cAAtB,EAAsC,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC9C,UAAIJ,aAAJ,EAAmB;AACfA,QAAAA,aAAa,CAAC,QAAD,EAAWI,EAAX,EAAeD,EAAf,CAAb;AACH;AACJ,KAJD;AAMAR,IAAAA,SAAS,CAACO,WAAV,CAAsB,gBAAtB,EAAwC,CAACC,EAAD,EAAKC,EAAL,KAAY;AAChD,UAAIJ,aAAJ,EAAmB;AACfA,QAAAA,aAAa,CAAC,QAAD,EAAWI,EAAX,EAAeD,EAAf,CAAb;AACH;AACJ,KAJD;AAMAR,IAAAA,SAAS,CAACO,WAAV,CAAsB,gBAAtB,EAAwC,CAACC,EAAD,EAAKC,EAAL,KAAY;AAChD,UAAIJ,aAAJ,EAAmB;AACfA,QAAAA,aAAa,CAAC,QAAD,EAAWI,EAAX,EAAeD,EAAf,CAAb;AACH;AACJ,KAJD;AAKAR,IAAAA,SAAS,CAACI,aAAV,GAA0B,IAA1B;AAEH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,SAAS,CAACW,IAAV,GAAiB,UAAjB;AACAX,IAAAA,SAAS,CAACY,MAAV,CAAiBC,MAAjB,GAA0B,CACtB,KADsB,EAEtB,MAFsB,EAGtB,OAHsB,EAItB,MAJsB,EAKtB,MALsB,EAMtB,OANsB,EAOtB,MAPsB,CAA1B;AAYA,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKR,KAAxB;AACAN,IAAAA,SAAS,CAACe,IAAV,CAAe,KAAKC,kBAApB,EAAwC,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAxC;AACAjB,IAAAA,SAAS,CAACkB,QAAV;AACAlB,IAAAA,SAAS,CAACmB,KAAV,CAAgBL,MAAhB;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,GAAG,EAAGC,KAAD,IAAW;AAAE,aAAKL,kBAAL,GAA0BK,KAA1B;AAAiC,OADvD;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB;AAFX;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzD4C","sourcesContent":["/* eslint-disable */\r\n/*{ { src / components / Scheduler / Scheduler.js } }*/\r\nimport React, { Component } from 'react';\r\nimport 'dhtmlx-scheduler';\r\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\r\nimport './Scheduler.css';\r\n\r\nconst scheduler = window.scheduler;\r\n\r\nexport default class Scheduler extends Component {\r\n\r\n    initSchedulerEvents() {\r\n        if (scheduler._$initialized) {\r\n            return;\r\n        }\r\n\r\n        const onDataUpdated = this.props.onDataUpdated;\r\n\r\n        scheduler.attachEvent('onEventAdded', (id, ev) => {\r\n            if (onDataUpdated) {\r\n                onDataUpdated('create', ev, id);\r\n            }\r\n        });\r\n\r\n        scheduler.attachEvent('onEventChanged', (id, ev) => {\r\n            if (onDataUpdated) {\r\n                onDataUpdated('update', ev, id);\r\n            }\r\n        });\r\n\r\n        scheduler.attachEvent('onEventDeleted', (id, ev) => {\r\n            if (onDataUpdated) {\r\n                onDataUpdated('delete', ev, id);\r\n            }\r\n        });\r\n        scheduler._$initialized = true;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        scheduler.skin = 'material';\r\n        scheduler.config.header = [\r\n            'day',\r\n            'week',\r\n            'month',\r\n            'date',\r\n            'prev',\r\n            'today',\r\n            'next'\r\n        ];\r\n\r\n\r\n\r\n        const { events } = this.props;\r\n        scheduler.init(this.schedulerContainer, new Date(2021, 5, 14));\r\n        scheduler.clearAll();\r\n        scheduler.parse(events);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(input) => { this.schedulerContainer = input }}\r\n                style={{ width: '100%', height: '100%' }}\r\n            ></div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}